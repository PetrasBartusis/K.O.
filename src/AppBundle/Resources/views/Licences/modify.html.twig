{% extends 'AppBundle::layout.html.twig' %}
{% form_theme form 'AppBundle::forms_vertical.html.twig' %}

{% set title = ('licences.type.' ~ licence.type)|trans %}
{% set fileType = constant('AppBundle\\Entity\\FileUpload::TYPE_INSURANCE') %}

{% block content %}

    <div class="page-header">
        <h1>{{ title }}</h1>
    </div>

    {% include 'AppBundle::flashes.html.twig' %}

    {{ form_start(form, {action: path('app_licences_modify', {id: licence.id})}) }}
    {% if licence.reason is not null %}
        <div class="alert alert-danger">
            <b>{{ 'licences.decline.reason'|trans }}:</b> {{ licence.reason }}
        </div>
    {% endif %}

    {% include 'AppBundle:Licences:form_fields.html.twig' %}

    {% if licence.documents.count > 0 %}
        <b>{{ 'licences.label.documents'|trans }}:</b>
        <table class="table table-bordered table-responsive">
            <thead>
            <tr>
                <th>{{ 'file_uploads.label.file'|trans }}</th>
                {% if licence.driverLicence %}
                    <th>{{ 'file_uploads.label.number'|trans }}</th>
                {% endif %}
                {% if licence.driverLicence or licence.judgeLicence %}
                    <th>{{ 'file_uploads.label.valid_until'|trans }}</th>
                {% endif %}
                <th>{{ 'file_uploads.label.actions'|trans }}</th>
            </tr>
            </thead>
            <tbody>
            {% for file in licence.documents %}
                {% set fileType = file.type %}
                <tr>
                    <td>
                        {% if file.approved %}
                            <i class="fa fa-check text-success" data-title="{{ 'licences.my.document_accepted'|trans }}"
                               data-toggle="tooltip"></i>
                        {% elseif file.rejected %}
                            <br>
                            <i class="fa fa-times text-danger" data-title="{{ 'licences.my.document_rejected'|trans }}"
                               data-toggle="tooltip"></i>
                        {% endif %}

                        <a href="{{ vich_uploader_asset(file, 'file') }}" target="_blank"
                           class="unvisited-blue hidden-print">
                            {{ ('file_uploads.type.'~file.type)|trans }}
                        </a>
                    </td>
                    {% if licence.driverLicence %}
                        <td>
                            {{ file.number ? file.number : '-' }}
                        </td>
                    {% endif %}
                    {% if licence.driverLicence or licence.judgeLicence %}
                        <td>
                            <span class="visible-print-inline">{{ ('file_uploads.type.'~file.type)|trans }}</span>
                            {{ file.validUntil ? file.validUntil|localizeddate('short', 'none') : '-' }}
                        </td>
                    {% endif %}
                    <td>
                        <a href="{{ url('app_licences_removedocument', {'id': licence.id, 'document': file.id}) }}" class="btn btn-xs btn-danger js-confirm js-no-ajax" data-text="{{ 'application.index.document_remove'|trans }}" data-title="{{ 'button.delete'|trans }}" data-toggle="tooltip">
                            <i class="fa fa-times"></i>
                        </a>

                        {% if file.rejected %}
                            <a href="{{ url('app_fileuploads_edit', {id: file.id, licenceId: licence.id}) }}"
                               class="btn btn-xs btn-default js-modal hidden-print">
                                {{ 'licences.my.upload_new'|trans }}
                            </a>
                            {% if file.reason %}
                                <br><br>
                                <div class="well well-sm">{{ file.reason }}</div>
                            {% endif %}
                        {% endif %}
                    </td>
                </tr>
            {% endfor %}

            {% if licence.documentsTypes is not empty %}
                <tr class="hidden-print">
                    <td>{{ 'licences.my.upload_new'|trans }}</td>
                    {% if licence.driverLicence %}
                        <td>-</td>
                    {% endif %}
                    {% if licence.driverLicence or licence.judgeLicence %}
                        <td>-</td>
                    {% endif %}
                    <td>
                        <select id="document-type-select" class="select2">
                            <option value="">{{ ('file_uploads.label.choose_type')|trans }}</option>
                        {% for type in licence.documentsTypes %}
                            <option value="{{ type }}">{{ ('file_uploads.type.'~type)|trans }}</option>
                        {% endfor %}
                        </select>
                        <span class="create-document-box hidden">
                            <br />
                            <a href="{{ url('app_fileuploads_new', {licence: licence.id, type: fileType}) }}"
                               class="btn btn-xs btn-default js-modal hidden-print create-new">
                                {{ 'licences.my.upload_new'|trans }}
                            </a>
                        </span>
                    </td>
                </tr>
            {% endif %}

            </tbody>
        </table>
    {% endif %}
    {% include 'AppBundle:Licences:additionalFields.html.twig' %}
    {{ form_rest(form) }}
    <button type="submit" class="btn btn-primary">{{ 'licences.info.modify_licence_request'|trans }}</button>
    {{ form_end(form) }}

{% endblock %}
{% block js %}

    {{ parent() }}

    <script>
        function addErrors(elem, error) {
            $(elem).parent().children('.help-block').empty();
            if (error == 'insurance_expiration') {
                $(elem).after("<span class='help-block'>{{ 'validators.does_not_expire.too_soon'|trans }}</span>");
            } else if (error == 'expired') {
                $(elem).after("<span class='help-block'>{{ 'validators.expired'|trans }}</span>");
            } else if (error == 'too_big_file') {
                $(elem).after("<span class='help-block'>{{ 'validators.too_big_file'|trans }}</span>");
            }
            $(elem).parent().addClass('has-error');
        }

        function removeErrors(elem) {
            $(elem).parent().children('.help-block').empty();
            $(elem).parent().removeClass('has-error');
        }

        $("input[type='file']").each(function () {
            var documentName = $(this).parent().parent().parent().children('h4').text();
            var photo = new RegExp("{{ ('file_uploads.type.'~constant('AppBundle\\Entity\\FileUpload::TYPE_PHOTO'))|trans }}");
            if (photo.test(documentName)) {
                $(this).prop("accept", "image/jpeg, image/jpg, image/gif");
            } else {
                $(this).prop("accept", "image/*,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document");
            }
        });

        $("button[type='submit']").click(function () {
            removeErrors(this);
            var validFiles = true;
            var filesSize = 0;
            $("input[type='file']").each(function () {
                for (var i = 0; i < this.files.length; i++) {
                    filesSize += this.files[i].size;
                    if (this.files[i].size > 10000000) {
                        addErrors(this, 'too_big_file');
                        validFiles = false;
                    }
                }
            });
            if (filesSize > 10000000 - $("form").not("[type='file']").serialize().length) {
                $(this).parent().children('.help-block').empty();
                $(this).after("<span class='help-block'>{{ 'validators.too_big_all_files'|trans }}</span>");
                $(this).parent().children('.help-block').css('color', '#a94442');
                validFiles = false;
            }
            if (!validFiles) {
                return false;
            }
        });

        $('#document-type-select').on('change', function () {
            if ($(this).val()) {
                if(!$('.create-document-box').is(":visible")) {
                    $('.create-document-box').toggleClass('hidden');
                }
                var linkParts = $('.create-document-box > a.create-new').attr('href').split("/");
                linkParts[linkParts.length - 2] = $(this).val();
                $('.create-document-box > a.create-new').attr('href', linkParts.join('/'));

            } else if (!$('#document-type-select').val() && $('.create-document-box').is(":visible")) {
                $('.create-document-box').toggleClass('hidden');
            }
        });

        if ($('#document-type-select').val() && !$('.create-document-box').is(":visible")) {
            $('.create-document-box').toggleClass('hidden');
        } else if (!$('#document-type-select').val() && $('.create-document-box').is(":visible")){
            $('.create-document-box').toggleClass('hidden');
        }

    </script>

    {% if licence.declarantLicence %}
        <script>
            $('.form-collection').collectionForm();
        </script>
    {% endif %}

    {% if licence.membershipLicence %}
        <script>
            $(document).ready(function () {
                $("#licence_info_personalCode").on('change', function () {
                    if ($(this).val() == 0) {
                        $('input[type="file"]').removeAttr('disabled');
                        $(".document-list").show();
                    } else {
                        $('input[type="file"]').attr('disabled', 'disabled');
                        $(".document-list").hide();
                    }
                });

            });
        </script>
    {% endif %}

    {% if not licence.membershipLicence %}
        <script>
            var deliverHidden = $("#licence_info_deliverTo");
            var deliverLasfBox = $('#deliver-lasf-box');
            var deliverCustomBox = $('#deliver-custom-box');

            $(document).ready(function () {
                var selected = deliverHidden.val();

                deliverLasfBox.on('click', function () {
                    deliverHidden.val('{{ cms_string('deliver_address')|trim }}');
                });

                deliverCustomBox.on('click', function () {
                    deliverHidden.val('{{ 'licences.deliver.custom'|trans({'%cost%': cms_string('deliver_cost')}) }}');
                });

            });
        </script>
    {% endif %}

    {% if licence.driverLicence %}
        <script>
            $(document).on('change', '#licence_info_licence', function (e) {
                var value = $(this).val();

                if ($.isNumeric(value)) {
                    $.getJSON('/declarant/' + value + '/info', {}, function (res) {
                        fillField(res);
                    })
                } else {
                    fillField({lasfName: "", lasfAddress: "", personalCode: ""});
                }

                function fillField(data) {
                    $('#licence_info_lasfName').val(data.lasfName);
                    $('#licence_info_lasfAddress').val(data.lasfAddress);
                    $('#licence_info_personalCode').val(data.personalCode);
                }
            });
        </script>
    {% endif %}

    <script>
        $("form").validate({
            rules: {
                field: {
                    required: true,
                }
            },
            errorPlacement: function (error, element) {
                if (element.hasClass("select2")) {
                    var sibling = element.next();
                    error.insertBefore(sibling);
                } else if (element.attr('type') === 'text' || element.attr('type') === 'email' || element.hasClass('licence')) {
                    error.insertBefore(element);
                } else if (element.attr('type') === 'file') {
                    error.insertBefore(element.parent());
                } else if (element.attr('type') === 'checkbox') {
                    error.insertAfter(element.parent());
                } else if (element.attr('type') === 'radio' && element.parents().eq(2).hasClass('deliverTo')) {
                    error.insertBefore(element.parents().eq(4));
                } else if (element.attr('type') === 'radio' && element.parents().eq(2).hasClass('urgency')) {
                    error.insertBefore(element.parents().eq(2));
                } else {
                    error.insertAfter(element);
                }
            }
        });

        {% include 'AppBundle::jQuery_validation_message_js.html.twig' %}
    </script>

    {% if licence.driverLicence or licence.JudgeLicence %}
        {% include 'AppBundle::driver_judge_form_js.html.twig' with {
        'secondaryLanguage': 'licence_info_secondaryLanguage',
        'languages' : 'licence_info_languages'
        } %}
        <script>
            displayDeliverToAdress($("#licence_info_deliverTo"), $('#licence_info_deliverTo_1'));
        </script>
    {% endif %}
    {% include 'AppBundle::google_maps.html.twig' with {'element': 'licence_info_city'} %}
{% endblock %}
